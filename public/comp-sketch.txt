App:
 -no props/state

Homepage
   -links to: Login, Signup

Context
	-object containing:
		-username
		-email
		-first/last name
		-list of jobs applied to
	-function to call backend with login/register info


		LoginForm
			state:
				-formData

		SignupForm
			state:
				-formData
		ProfileForm
			contextFunction
			state:
				-formData


	Nav (logged in)
	-nested in BrowserRouter
	-prop
		-currentUser

	 Link components to:
	 	-/homepage
	 	-/companies
		-/jobs
		-/logout
		-/profile

		(anon user)
		-/homepage
		-/Login
		-/signup


	RoutesList
		-nested in BrowserRouter
		Routes for:
			/homepage
			/companies
			/jobs
			/companies/:handle
			/Login
			/signup
			/logout


	CompaniesList: Maps over CompanyData to render a CompanySlug component for each.
					Each slug is wrapped in a Link component to /companies/:handle
	 props: CompanyData
	 state: searchedCompanies

		CompanySearchBar: search bar to filter companies by name
			props: function to pare down list of CompanySlugs in Companies based on name
			state: keep track of what is typed in field
				-

		CompanyCard: wrapped in a Link to companies/:handle
			props: company name, description, and handle

	CompanyDetail: Renders a company page with Job components for each job of that company
		props: Company handle from Companies
		state: Company data from call to API GET companies/:handle (useEffect to call upon mount)

		JobCardList: Renders a job element for each job related to the parent Company.
		props: job object passed by Company {id, title, salary, equity} NOTE: Won't have a company prop in this case; implied by parent

			JobCard: Renders a job element for each job related to the parent Company.
		        -props: job object passed by Jobs {id, title, salary, equity}
				-wrapped in useContext
				-apply button to each card


	JobList
	 props: JobData
	 state: searchedJobs
		JobSearchBar: search bar to filter jobs by title
			props: function to pare down jobs in Jobs based on title
			state: keep track of what is typed in field

		JobCardList (detailed on companies)
			JobCard (detailed one companies)

		JobCard: (detailed on companies)


	JoblyApi
		-request: points to backend routes:
			/companies
			/jobs
			/company/:handle
			/token (Login)
			/register
			/users
				-will have POST method
		-getCompany
		-getCompanies
		-getJobs
		-contextUpdateFunction




